html {
  box-sizing: border-box;
  font-family: sans-serif;
  font-size: 16px;
}

*,
*::after,
*::before {
  box-sizing: inherit;
}

img {
  max-width: 100%;
  height: auto;
}

.box {
  border: thick solid black;
  width: 400px;
  height: 400px;
  margin: 0 auto 3rem;
}

.card {
  border: thick solid black;
  width: 600px;
  height: 400px;
  margin-left: auto;
  margin-right: auto;
}

.card img {
  height: 100%;
  object-fit: cover;
  object-position: left center;
}

/******************************************Transiciones****************************************/

/* Transiciones
transition-property
transition-duration
transition-timing-function: linear ease ease-in ease-out ease-in-out steps
transition-delay
transition: property duration timing-function delay */

.transitions .box {
  background-color: magenta;
  /* transition-property: background-color;
  transition-duration: 1s;
  transition-timing-function: ease;
  transition-delay: .1s; */
  /* Es mala practica utilizar all por que cuando carga la interfaz web se animan todas las propiedades
  transition: all 1s linear .5s; */
  transition: border-color 2s linear .5s, background-color 1s ease .1s, border-radius 2s ease-in-out .1s;
}

.transitions .box:hover {
  background-color: cyan;
  border-color: red;
  border-radius: 2rem;
  /* algunas propiedades no se animan
  border-style: dashed; */
}

.transitions .card {
  transition: all 2s ease;
  transition: opacity 1s ease-in-out,
    border-color 3s steps(3),
    filter 2s ease .1s,
    box-shadow 2s linear .5s;
}

.transitions .card:hover {
  opacity: .7;
  border-color: orchid;
  filter: blur(.15rem);
  box-shadow: 1rem 1rem 2rem .5rem black;
}

.transitions .card img {
  transition: object-position 2s ease-in-out 3s;
}

.transitions .card img:hover {
  object-position: 100% 0;
}

/***********************************Transformaciones 2D****************************************/

.transform-2d img {
  transition: transform 2s ease-in-out;
  transform: none;
}

.transform-2d img:hover {
  transform: translateX(4rem);
  transform: translateY(4rem);
  transform: translate(4rem, 4rem);
  transform: translate(50%, 50%);
  transform: scaleX(2);
  transform: scaleY(2);
  transform: scale(2, 2);
  transform: scale(50%, 50%);
  transform: scale(-1, -1);
  transform: rotateZ(60deg);
  transform: rotateZ(-60deg);
  transform: skewX(20deg);
  transform: skewX(-20deg);
  transform: skewY(20deg);
  transform: skewY(-20deg);
  transform: skew(20deg, 20deg);
  /* matrix (scaleX),skewY(),skewX(),scaleY(),translateX(),translateY()) */
  transform: matrix(1, 2, 2, 1, 20, 10);
  transform: translate(20%, 50%) rotate(240deg) skew(10deg, 20deg) scale(.5, .3);
}

/***********************************Transformaciones 3D****************************************/

.transform-3d {
  perspective: 10rem;
}

.transform-3d img {
  transition: transform 2s ease-in-out;
}

.transform-3d img:hover {
  transform: translateZ(4rem);
  transform: translateZ(-4rem);
  transform: translate3d(4rem, 4rem, 4rem);
  transform: scaleZ(1.5);
  transform: scale3d(2, 2, 2);
  transform: rotateX(60deg);
  transform: rotateX(-60deg);
  transform: rotateY(-60deg);
  transform: rotateY(60deg);
  transform: rotate3d(1, .5, 0, -45deg);
  transform: matrix3d(1, 0, 0, 0, 0, 1, 6, 0, 0, 0, 1, 0, 50, 100, 0, 1.1);
  transform: rotate3d(-1, 2.5, -2, 60deg) translate3d(2rem, 50%, -3rem) scale3d(2, -1, 3);
}

/*********************************Transformaciones Origin**************************************/

.transform-origin img {
  transition: transform 2s ease-in-out;
  /* transform-origin: X Y Z; */
  /* default */
  transform-origin: 50% 50% 0;
  transform-origin: 0 0;
  transform-origin: 0;
  transform-origin: top left;
  transform-origin: top right;
  transform-origin: top center;
  transform-origin: bottom center;
}

.transform-origin img:hover {
  transform: rotate(360deg);
}

/***************************************Flip Card 1********************************************/

.flip-card-1 {
  border: thick solid black;
  width: 600px;
  height: 400px;
  margin: 0 auto 5rem;
  position: relative;
  cursor: pointer;
  transition: transform 1s ease-in-out;
  perspective: 10rem;
  /* defecto */
  transform-style: flat;
  transform-style: preserve-3d;
}

.flip-card-1 img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: left center;
}

.flip-face {
  position: absolute;
  width: 100%;
  height: 100%;
  /* default */
  backface-visibility: visible;
  backface-visibility: hidden;
}

.flip-card-1:hover {
  transform: rotateY(180deg);
}

.flip-front {
  transform: rotateY(0deg);
}

.flip-back {
  transform: rotateY(180deg);
}

/***************************************Flip Card 2********************************************/

.flip-card-2 {
  border: thick solid black;
  width: 600px;
  height: 400px;
  margin: 0 auto 5rem;
  position: relative;
  cursor: pointer;
  transition: transform 1s ease-in-out;
  perspective: 10rem;
  /* defecto */
  transform-style: flat;
  transform-style: preserve-3d;
}

.flip-card-2 img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: left center;
}

.flip-face {
  position: absolute;
  width: 100%;
  height: 100%;
  /* default */
  backface-visibility: visible;
  backface-visibility: hidden;
}

.flip-card-2 {
  transform-origin: center right;
}

.flip-card-2:hover {
  transform: translateX(-100%) rotateY(-180deg);
}

.flip-front {
  transform: rotateY(0deg);
}

.flip-back {
  transform: rotateY(180deg);
}

/***************************************Animaciones********************************************/


@keyframes myAwesomeAnimation {
  from {
    opacity: 0;
    transform: translateX(0);
  }

  to {
    opacity: 1;
    transform: translateX(100%);
  }
}

.my-animation {
  /* animation: name duration timing-function delay iteration-count direction fill-mode play-state; */
  animation-name: myAwesomeAnimation;
  animation-duration: 1s;
  animation-timing-function: cubic-bezier(0, 1, 1, -0.02);
  animation-timing-function: ease-in-out;
  animation-delay: 1s;
  animation-iteration-count: 1;
  /* animation-iteration-count: infinite; */
  animation-direction: alternate-reverse;
  animation-direction: alternate;
  animation-direction: reverse;
  animation-direction: normal;
  animation-fill-mode: none;
  /* Al final de la animación se queda con los estilos finales de la animación */
  animation-fill-mode: forwards;
  /* Al inicio de la animación se queda con los estilos finales de la animación */
  animation-fill-mode: backwards;
  /* Both aplica al mismo tiempo forwards y backwards */
  animation-fill-mode: both;
  animation-play-state: running;
  /* en CSS no tiene sentido usar esta animación */
  animation-play-state: paused;
  animation: myAwesomeAnimation 1.5s ease .2s 6 alternate both running;
}